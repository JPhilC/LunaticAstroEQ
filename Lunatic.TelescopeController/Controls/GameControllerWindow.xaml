<!-- BSD 2-Clause License

Copyright (c) 2019, LunaticSoftware.org, Email: phil@lunaticsoftware.org
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this
  list of conditions and the following disclaimer.

* Redistributions in binary form must reproduce the above copyright notice,
  this list of conditions and the following disclaimer in the documentation
  and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. -->
<Window x:Class="Lunatic.TelescopeController.Controls.GameControllerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Lunatic.TelescopeController"
        xmlns:controls="clr-namespace:Lunatic.TelescopeController.Controls"
        xmlns:m="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:vm="clr-namespace:Lunatic.TelescopeController.ViewModel"
        mc:Ignorable="d"
        Title="Site Location Map" Height="600" Width="800"
        WindowStartupLocation="CenterOwner" Topmost="True"
        Style="{DynamicResource PropertyDialogStyle}"
        Loaded="Window_Loaded">
   <Window.Resources>
      <ResourceDictionary>
         <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="../Skins/MainSkin.xaml" />
         </ResourceDictionary.MergedDictionaries>
      </ResourceDictionary>
   </Window.Resources>
   <Grid Margin="10">
      <Grid.ColumnDefinitions>
         <ColumnDefinition Width="2*" />
         <ColumnDefinition Width="5" />
         <ColumnDefinition Width="3*" />
         <ColumnDefinition Width="5" />
         <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="5"/>
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="5"/>
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="5"/>
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="10"/>
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="5"/>
         <RowDefinition Height="Auto"/>
         <RowDefinition Height="5"/>
         <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock Grid.Row="0" Text="Friendly name" Style="{StaticResource RedLEDLabel}"/>
      <TextBox Grid.Row="0" Grid.Column="2" Text="{Binding Controller.Name}" Style="{StaticResource RedLEDTextBox}"/>
      <TextBlock Grid.Row="2" Text="Command/button mappings" Style="{StaticResource RedLEDLabel}"/>

      <DataGrid Grid.Row="4" Grid.RowSpan="9" ItemsSource="{Binding Controller.ButtonMappings}"
                  IsEnabled="{Binding ControllerConnected}"
                  SelectedItem="{Binding SelectedButtonMapping}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  AutoGenerateColumns="False"
                  Style="{DynamicResource DataGridStyle1}">
         <!--ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                  CellStyle="{DynamicResource DataGridCellStyle1}" 
                  RowHeaderStyle="{DynamicResource DataGridRowHeaderStyle1}">-->
         <i:Interaction.Triggers>
            <i:EventTrigger EventName="GotFocus">
               <i:InvokeCommandAction Command="{Binding SetCurrentSettingCommand}" CommandParameter="{x:Static vm:GameControllerCurrentSetting.ButtonCommand}"/>
            </i:EventTrigger>
         </i:Interaction.Triggers>
         <DataGrid.Columns>
            <DataGridTextColumn Header="Command" Binding="{Binding Command}" IsReadOnly="True" MinWidth="80"  Width="*"  />
            <DataGridTextColumn Header="Button" Binding="{Binding Name}" IsReadOnly="True" MinWidth="80"   Width="*"  />
            <DataGridTemplateColumn>
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button
                                Style="{StaticResource HyperlinkLikeButton}" Content="Clear"
                                Command="{Binding DataContext.ClearCommandCommand, RelativeSource={RelativeSource AncestorType=controls:GameControllerWindow}}"
                                CommandParameter="{Binding}" Margin="10,0">
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
         </DataGrid.Columns>
      </DataGrid>

      <TextBlock Grid.Row="2" Grid.Column="2" Text="Axis ranges" Style="{StaticResource RedLEDLabel}"/>

      <DataGrid Grid.Row="4" Grid.Column="2" ItemsSource="{Binding Controller.AxisMappings}"
                  IsEnabled="{Binding ControllerConnected}"
                  SelectedItem="{Binding SelectedAxisMapping}"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  AutoGenerateColumns="False" 
                Style="{DynamicResource DataGridStyle1}">
         <i:Interaction.Triggers>
            <i:EventTrigger EventName="GotFocus">
               <i:InvokeCommandAction Command="{Binding SetCurrentSettingCommand}" CommandParameter="{x:Static vm:GameControllerCurrentSetting.AxisCommand}"/>
            </i:EventTrigger>
         </i:Interaction.Triggers>
         <DataGrid.Columns>
            <DataGridTextColumn Header="Command" Binding="{Binding Command}" IsReadOnly="True" MinWidth="80"  Width="*"  />
            <DataGridTextColumn Header="Axis" Binding="{Binding Name}" IsReadOnly="True" MinWidth="80"   Width="*"  />
            <DataGridTemplateColumn Header="Reverse" HeaderStyle="{StaticResource DataGridColumnHeaderCentered}">
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <CheckBox IsChecked="{Binding ReverseDirection, UpdateSourceTrigger=PropertyChanged}" 
                               Style="{StaticResource RedLEDCheckBox}"  HorizontalAlignment="Center"
                               Template="{StaticResource StyleableCheckBoxControlTemplate}"/>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>

            </DataGridTemplateColumn>
            <DataGridTemplateColumn>
               <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                     <Button
                                Style="{StaticResource HyperlinkLikeButton}" Content="Clear" 
                                Command="{Binding DataContext.ClearCommandCommand, RelativeSource={RelativeSource AncestorType=controls:GameControllerWindow}}"
                                CommandParameter="{Binding}" Margin="10,0">
                     </Button>
                  </DataTemplate>
               </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
         </DataGrid.Columns>
      </DataGrid>

      <Button Grid.Row="6" Grid.Column="2" Content="Link Button" Style="{StaticResource HyperlinkLikeButton}" Height="30"/>
      <Grid Grid.RowSpan="13" Grid.ColumnSpan="3" Background="Black" HorizontalAlignment="Center" VerticalAlignment="Center">
         <TextBlock Margin="50"
                   Text="Controller is not responding"
                   Style="{StaticResource RedLEDLabelLargeFading}" 
                       Background="Black"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                   Visibility="{Binding ControllerConnected, Converter={StaticResource ReversedBooleanToVisiblityConverter}}"
                   />
      </Grid>


      <DockPanel Grid.Column="4" Grid.RowSpan="13">
         <StackPanel DockPanel.Dock="Bottom">
            <Button Content="OK" Margin="0,0,0,10" Command="{Binding SaveChangesAndCloseCommand}" Width="80" Template="{DynamicResource ButtonBaseControlTemplate1}" Style="{StaticResource RedButton}"/>
            <Button Content="Cancel" Command="{Binding CancelChangesAndCloseCommand}" Width="80" Template="{DynamicResource ButtonBaseControlTemplate1}" Style="{StaticResource RedButton}"/>
         </StackPanel>
         <TextBlock VerticalAlignment="Top" Width="80" Height="Auto" TextWrapping="Wrap" Padding="10" Style="{StaticResource RedLEDText}"
                       Text="To configure a button click on the command it to trigger then click the button or POV quandrant on the gamepad/joystick. 
                       To configure an axis range click on the axis range then move the matching joystick to it's extremities two or three times.
                       When you are done click the OK button."  Margin="10,10,0,16" FontSize="9" />
      </DockPanel>
   </Grid>
</Window>
